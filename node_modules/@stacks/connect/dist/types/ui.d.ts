import { WebBTCProvider } from '@stacks/connect-ui';
import { ContractCallOptions, ContractDeployOptions, ProfileUpdateRequestOptions, PsbtRequestOptions, STXTransferOptions, SignatureRequestOptions, StacksProvider, StructuredDataSignatureRequestOptions, TransactionOptions } from './types';
import type { AuthOptions } from './types/auth';
export type ActionOptions = (AuthOptions | STXTransferOptions | ContractCallOptions | ContractDeployOptions | TransactionOptions | PsbtRequestOptions | ProfileUpdateRequestOptions | SignatureRequestOptions | StructuredDataSignatureRequestOptions) & {
    defaultProviders?: WebBTCProvider[];
};
/** A wrapper for selecting a wallet (if none is selected) and then calling the {@link authenticate} action. */
export declare const showConnect: (options: AuthOptions, provider?: StacksProvider) => any;
/** A wrapper for selecting a wallet (if none is selected) and then calling the {@link openSTXTransfer} action. */
export declare const showSTXTransfer: (options: STXTransferOptions, provider?: StacksProvider) => any;
/** A wrapper for selecting a wallet (if none is selected) and then calling the {@link openContractCall} action. */
export declare const showContractCall: (options: ContractCallOptions, provider?: StacksProvider) => any;
/** A wrapper for selecting a wallet (if none is selected) and then calling the {@link openContractDeploy} action. */
export declare const showContractDeploy: (options: ContractDeployOptions, provider?: StacksProvider) => any;
/** A wrapper for selecting a wallet (if none is selected) and then calling the {@link openSignTransaction} action. */
export declare const showSignTransaction: (options: import("./types").SignTransactionOptionBase, provider?: StacksProvider) => any;
/** A wrapper for selecting a wallet (if none is selected) and then calling the {@link openPsbtRequestPopup} action. */
export declare const showPsbt: (options: PsbtRequestOptions, provider?: StacksProvider) => any;
/** A wrapper for selecting a wallet (if none is selected) and then calling the {@link openProfileUpdateRequestPopup} action. */
export declare const showProfileUpdate: (options: ProfileUpdateRequestOptions, provider?: StacksProvider) => any;
/** A wrapper for selecting a wallet (if none is selected) and then calling the {@link openSignatureRequestPopup} action. */
export declare const showSignMessage: (options: SignatureRequestOptions, provider?: StacksProvider) => any;
/** A wrapper for selecting a wallet (if none is selected) and then calling the {@link openStructuredDataSignatureRequestPopup} action. */
export declare const showSignStructuredMessage: (options: StructuredDataSignatureRequestOptions, provider?: StacksProvider) => any;
/** Disconnect selected wallet. Alias for {@link clearSelectedProviderId} */
export declare const disconnect: () => void;
/**
 * @deprecated Use the renamed {@link showConnect} method
 */
export declare const showBlockstackConnect: (options: AuthOptions, provider?: StacksProvider) => any;
